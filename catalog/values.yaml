# Default values for catalog.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: "public.ecr.aws/aws-containers/retail-store-sample-catalog"
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.4.0"
database:
  volumes:
      name: data
  name: mysql
  args: "--ignore-db-dir=lost+found"
  repository: "public.ecr.aws/docker/library/mysql"
  tag: "5.7"
  env:
    - name: MYSQL_ROOT_PASSWORD
      value: my-secret-pw
    - name: MYSQL_DATABASE
      value: catalog
    - name: MYSQL_USER
      valueFrom:
        secretKeyRef:
          name: catalog-db
          key: username
    - name: MYSQL_PASSWORD
      valueFrom:
        secretKeyRef:
          name: catalog-db
          key: password
  volumeMounts:
    - name: data
      mountPath: /var/lib/mysql
  containerPort: 3306

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: 
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
    
  name: ""

podAnnotations: 
   prometheus.io/path: /metrics
   prometheus.io/port: "8080"
   prometheus.io/scrape: "true"

podSecurityContext: 
  fsGroup: 1000

securityContext: 
   capabilities:
    drop:
     - ALL
   readOnlyRootFilesystem: true
   runAsNonRoot: true
   runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  containerPort: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: 
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      memory: 256Mi
    requests:
      cpu: 128m
      memory: 256Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}


labels:
    helm.sh/chart: catalog-0.0.1
    app.kubernetes.io/name: catalog
    app.kubernetes.io/instance: catalog
    app.kubernetes.io/component: service
    app.kuberneres.io/owner: retail-store-sample
    app.kubernetes.io/managed-by: Helm

selector:
    app.kubernetes.io/name: catalog
    app.kubernetes.io/instance: catalog
    app.kubernetes.io/component: service
    app.kuberneres.io/owner: retail-store-sample

selector_sts:
     app.kubernetes.io/name: catalog
     app.kubernetes.io/instance: catalog
     app.kubernetes.io/component: mysql
strategy:
    maxUnavailable: 1
    type: RollingUpdate   

env:
  - name: DB_USER
    valueFrom:
      secretKeyRef:
        name: catalog-db
        key: username
  - name: DB_PASSWORD
    valueFrom:
      secretKeyRef:
          name: catalog-db
          key: password    

envFrom:
  - configMapRef:
      name: catalog   

livenessProbe:
  httpGet:
    path: /health
    port: 8080
  initialDelaySeconds: 30
  eriodSeconds: 3     

volumeMounts:
   - mountPath: /tmp
     name: tmp-volume
volumes:
   - name: tmp-volume
     emptyDir:
        medium: Memory